diff --git a/lib/lE.ml b/lib/lE.ml
index 9d131bb..ba83a1f 100644
--- a/lib/lE.ml
+++ b/lib/lE.ml
@@ -139,29 +139,29 @@ struct
     let rec on_read buf ~off ~len =
       let str = Bigstringaf.substring buf ~off ~len in
       pusher (Some str) ;
-      Httpaf.Body.schedule_read ~on_eof ~on_read body in
-    Httpaf.Body.schedule_read ~on_eof ~on_read body ;
+      Httpaf.Body.Reader.schedule_read ~on_eof ~on_read body in
+    Httpaf.Body.Reader.schedule_read ~on_eof ~on_read body ;
     Lwt.async @@ fun () -> Lwt_mvar.put mvar resp
 
   let rec unroll body stream =
     let open Lwt.Infix in
     Lwt_stream.get stream >>= function
     | Some str ->
-        Httpaf.Body.write_string body str ;
+        Httpaf.Body.Writer.write_string body str ;
         unroll body stream
     | None ->
-        Httpaf.Body.close_writer body ;
+        Httpaf.Body.Writer.close body ;
         Lwt.return_unit
 
   let transmit cohttp_body httpaf_body =
     match cohttp_body with
-    | `Empty -> Httpaf.Body.close_writer httpaf_body
+    | `Empty -> Httpaf.Body.Writer.close httpaf_body
     | `String str ->
-        Httpaf.Body.write_string httpaf_body str ;
-        Httpaf.Body.close_writer httpaf_body
+        Httpaf.Body.Writer.write_string httpaf_body str ;
+        Httpaf.Body.Writer.close httpaf_body
     | `Strings sstr ->
-        List.iter (Httpaf.Body.write_string httpaf_body) sstr ;
-        Httpaf.Body.close_writer httpaf_body
+        List.iter (Httpaf.Body.Writer.write_string httpaf_body) sstr ;
+        Httpaf.Body.Writer.close httpaf_body
     | `Stream stream -> Lwt.async @@ fun () -> unroll httpaf_body stream
 
   exception Invalid_response_body_length of Httpaf.Response.t
@@ -192,9 +192,10 @@ struct
     | Ok flow -> (
         let error_handler = error_handler mvar_err in
         let response_handler = response_handler mvar_res pusher in
-        let httpaf_body, conn =
-          Httpaf.Client_connection.request ~error_handler ~response_handler req
-        in
+        let conn = Httpaf.Client_connection.create ?config:None in
+        let httpaf_body =
+          Httpaf.Client_connection.request conn ~error_handler ~response_handler
+            req in
         Lwt.async (fun () ->
             Paf.run ~sleep (module Httpaf_Client_connection) conn flow) ;
         transmit body httpaf_body ;
